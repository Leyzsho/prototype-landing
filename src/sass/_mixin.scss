@import './variables';

@mixin container {
  max-width: 1260px;
  width: 100%;
  padding: 0 10px;
  margin: 0 auto;
}

@mixin logo {
  display: inline-block;
  width: 56px;
  height: 56px
}

@mixin navLink {
  position: relative;
  color: $color2;
  font-size: 18px;
  font-weight: 400;
  outline: none;
  transition: color .3s ease-in-out;

  &::before {
    transform-origin: 100% 50%;
    transform: scale3d(0, 1, 1);
    transition: transform 0.3s;
  }

  &:hover::before {
    transform-origin: 0% 50%;
    transform: scale3d(1, 1, 1);
  }

  &::before {
    content: '';
    position: absolute;
    width: 100%;
    height: 2px;
    background: currentColor;
    top: 100%;
    left: 0;
    pointer-events: none;
    opacity: 0;
  }

  &:focus-visible {
    color: $color5;
  }

  &:hover span {
    animation: glitchText 0.4s linear;
  }

  &:hover::before {
    opacity: 1;
    animation: glitchLine 0.4s steps(2, start) forwards;
  }
}

@mixin btn {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 190px;
  min-height: 40px;
  padding: 10px 22px;
  font-size: 18px;
  font-weight: 400;
  color: $color6;
  background-color: $color1;
  border-radius: 8px;
  outline: none;
  transition: transform .3s ease-in-out;

  &::after {
    pointer-events: none;
    position: absolute;
    z-index: -1;
    content: '';
    top: 100%;
    left: 5%;
    height: 10px;
    width: 90%;
    opacity: 0;
    background: radial-gradient(ellipse at center, rgba(0, 0, 0, 0.35) 0%, rgba(0, 0, 0, 0) 80%);
    transition: transform 0.3s ease-in-out, opacity .3s ease-in-out;
  }

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: $color5;
    border-radius: 8px;
    transition: transform 0.3s cubic-bezier(0.7, 0, 0.2, 1);
    transform-origin: 100% 50%;
  }

  & span {
    display: block;
    position: relative;
  }

  & > span {
    overflow: hidden;
  }

  & > span > span {
    overflow: hidden;
  }

  &:focus-visible {
    transform: translateY(-5px);
  }

  &:focus-visible::after {
    opacity: 1;
    transform: translateY(5px);
  }

  &:hover > span > span {
    animation: MoveUpInitial 0.2s forwards, MoveUpEnd 0.2s forwards 0.2s;
  }


  &:hover::before {
    transform: scale3d(0,1,1);
    transform-origin: 0% 50%;
  }
}

@mixin title {
  font-family: Rosario;
  font-size: 70px;
  line-height: 100%;
  color: $color2;
}

@mixin descr {
  color: $color3;
  font-size: 18px;
  font-weight: 400;
  line-height: 30px;
}

@mixin linkToAppContainer {
  @include descr;
  display: flex;
  align-items: center;
  gap: 20px;
  color: $color2;
  font-weight: 500;
  transition: color .3s ease-in-out;
  outline: none;

  &:focus-visible span {
    transform: translateX(20px);
  }

  &:hover span::before {
    transform: translate3d(100%,0,0);
  }

  &:hover span > svg {
    transform: rotate(90deg);
  }
}

@mixin linkToAppCircle {
  @include descr;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 64px;
  height: 64px;
  border-radius: 50%;
  background-color: $color1;
  transition: transform .3s ease-in-out;
  overflow: hidden;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: $color5;
    width: 120%;
    left: -10%;
    transform: skew(30deg);
    transition: transform 0.4s cubic-bezier(0.3, 1, 0.8, 1);
  }
}

@mixin linkToAppArrowRight {
  position: relative;
  z-index: 1;
  width: 32px;
  height: 15px;
  transition: transform .3s ease-in-out;
}

@keyframes glitchText {
  0% {
      opacity: 1;
      transform: translate3d(-10px, 0, 0) scale3d(-1, -1, 1);
      -webkit-clip-path: polygon(0 20%, 100% 20%, 100% 21%, 0 21%);
      clip-path: polygon(0 20%, 100% 20%, 100% 21%, 0 21%);
  }

  10% {
      -webkit-clip-path: polygon(0 33%, 100% 33%, 100% 33%, 0 33%);
      clip-path: polygon(0 33%, 100% 33%, 100% 33%, 0 33%);
  }

  20% {
      -webkit-clip-path: polygon(0 44%, 100% 44%, 100% 44%, 0 44%);
      clip-path: polygon(0 44%, 100% 44%, 100% 44%, 0 44%);
  }

  35% {
      -webkit-clip-path: polygon(0 50%, 100% 50%, 100% 20%, 0 20%);
      clip-path: polygon(0 50%, 100% 50%, 100% 20%, 0 20%);
  }

  50% {
      -webkit-clip-path: polygon(0 70%, 100% 70%, 100% 70%, 0 70%);
      clip-path: polygon(0 70%, 100% 70%, 100% 70%, 0 70%);
  }

  60% {
      -webkit-clip-path: polygon(0 80%, 100% 80%, 100% 80%, 0 80%);
      clip-path: polygon(0 80%, 100% 80%, 100% 80%, 0 80%);
  }

  70% {
      -webkit-clip-path: polygon(0 50%, 100% 50%, 100% 55%, 0 55%);
      clip-path: polygon(0 50%, 100% 50%, 100% 55%, 0 55%);
  }

  80% {
      -webkit-clip-path: polygon(0 70%, 100% 70%, 100% 80%, 0 80%);
      clip-path: polygon(0 70%, 100% 70%, 100% 80%, 0 80%);
  }

  90% {
      transform: translate3d(-10px, 0, 0) scale3d(-1, -1, 1);
  }

  100% {
      opacity: 1;
      transform: translate3d(0, 0, 0) scale3d(1, 1, 1);
      -webkit-clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%);
      clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%);
  }
}

@keyframes glitchLine {
  0% {
      transform: scale3d(1, 1, 1);
  }

  10% {
      transform: translate3d(10px, 0, 0);
  }

  20% {
      transform: translate3d(0, 4px, 0);
  }

  30% {
      transform: scale3d(0.1, 1.4, 1) translate3d(0, -25px, 0);
      transform-origin: 100% 0%;
  }

  40% {
      transform: scale3d(1, 0.3, 1) translate3d(0, 25px, 0);
  }

  50% {
      transform: scale3d(0.5, 0.3, 1) translate3d(-100px, -80px, 0);
  }

  60% {
      transform: scale3d(1, 1.25, 1) translate3d(10px, -5px, 0);
  }

  70% {
      transform: scale3d(0.5, 0.5, 1) translate3d(0, 20px, 0);
  }

  80% {
      transform: translate3d(-30, 10px, 0) scale3d(1, 0.4, 1);
      transform-origin: 100% 0%;
  }

  90% {
      transform: scale3d(1, 0.5, 1) translate3d(0, -15px, 0);
      ;
      transform-origin: 0% 50%;
  }

  100% {
      opacity: 1;
  }
}

@keyframes MoveUpInitial {
	to {
		transform: translate3d(0,-105%,0);
	}
}

@keyframes MoveUpEnd {
	from {
		transform: translate3d(0,100%,0);
	}
	to {
		transform: translate3d(0,0,0);
	}
}
